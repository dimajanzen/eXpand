# Auto-generated by EclipseNSIS Script Wizard
# 16.02.2011 14:21:40

!define APP_NAME "eXpandFramework"

Name "${APP_NAME}"

RequestExecutionLevel admin

# General Symbol Definitions
!define REGKEY "SOFTWARE\${APP_NAME}"
!ifndef VERSION
   !define VERSION 1.0
!endif
!define COMPANY eXpandFramework
!define URL http://www.expandframework.com

# MUI Symbol Definitions
!define MUI_ICON "${NSISDIR}\Contrib\Graphics\Icons\modern-install-colorful.ico"
!define MUI_FINISHPAGE_NOAUTOCLOSE
!define MUI_UNICON "${NSISDIR}\Contrib\Graphics\Icons\modern-uninstall-colorful.ico"
!define MUI_UNFINISHPAGE_NOAUTOCLOSE
!define MUI_WELCOMEFINISHPAGE_BITMAP "Resource\Installer\PageImage.bmp"
!define MUI_UNWELCOMEFINISHPAGE_BITMAP "Resource\Installer\PageImage.bmp"

# Included files
!include Sections.nsh
!include MUI2.nsh

# Variables
Var StartMenuGroup

# Installer pages
!insertmacro MUI_PAGE_WELCOME
!insertmacro MUI_PAGE_INSTFILES
!insertmacro MUI_PAGE_FINISH
!insertmacro MUI_UNPAGE_CONFIRM
!insertmacro MUI_UNPAGE_INSTFILES

# Installer languages
!insertmacro MUI_LANGUAGE English

# Installer attributes
OutFile setup.exe
InstallDir $PROGRAMFILES\eXpandFramework
CRCCheck on
XPStyle on
ShowInstDetails show

VIProductVersion "${VERSION}.0.0"
VIAddVersionKey /LANG=${LANG_ENGLISH} ProductName "${APP_NAME}"
VIAddVersionKey /LANG=${LANG_ENGLISH} ProductVersion "${VERSION}"
VIAddVersionKey /LANG=${LANG_ENGLISH} CompanyName "${COMPANY}"
VIAddVersionKey /LANG=${LANG_ENGLISH} CompanyWebsite "${URL}"
VIAddVersionKey /LANG=${LANG_ENGLISH} FileVersion "${VERSION}"
VIAddVersionKey /LANG=${LANG_ENGLISH} FileDescription ""
VIAddVersionKey /LANG=${LANG_ENGLISH} LegalCopyright ""
InstallDirRegKey HKLM "${REGKEY}" Path
ShowUninstDetails show
BrandingText "${APP_NAME} Install System v ${VERSION}"

# Installer sections
Section -Main SEC0000
    SetOutPath $INSTDIR
    SetOverwrite on
    File /r Build\Installer\*
    WriteRegStr HKLM "${REGKEY}\Components" Main 1
SectionEnd

Section -post SEC0001
    WriteRegStr HKLM "${REGKEY}" Path $INSTDIR
    SetOutPath $INSTDIR
    WriteUninstaller $INSTDIR\uninstall.exe
    SetOutPath $SMPROGRAMS\$StartMenuGroup
    CreateShortcut "$SMPROGRAMS\$StartMenuGroup\$(^UninstallLink).lnk" $INSTDIR\uninstall.exe
    WriteRegStr HKLM "SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\$(^Name)" DisplayName "$(^Name)"
    WriteRegStr HKLM "SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\$(^Name)" DisplayVersion "${VERSION}"
    WriteRegStr HKLM "SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\$(^Name)" Publisher "${COMPANY}"
    WriteRegStr HKLM "SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\$(^Name)" URLInfoAbout "${URL}"
    WriteRegStr HKLM "SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\$(^Name)" DisplayIcon $INSTDIR\uninstall.exe
    WriteRegStr HKLM "SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\$(^Name)" UninstallString $INSTDIR\uninstall.exe
    WriteRegDWORD HKLM "SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\$(^Name)" NoModify 1
    WriteRegDWORD HKLM "SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\$(^Name)" NoRepair 1
    
    # add To display an assembly in the Add Reference dialog box http://msdn.microsoft.com/en-us/library/wkze6zky.aspx
    WriteRegStr HKLM "SOFTWARE\Microsoft\.NETFramework\v3.0\AssemblyFoldersEx\Xpand" "" "$INSTDIR\Xpand.DLL"

    #!execute "$INSTDIR\gacinstall.cmd"
    #ExecShell start "$INSTDIR\Tools\gacutil.exe $INSTDIR\Xpand.DLL\Xpand.ExpressApp.IO.dll" /WAIT SW_HIDE
    
    # get all eXpand Dll's from the $INSTDIR and put into XpandDllList.txt 
    Push "$INSTDIR\XpandDllList.txt" # output file
    Push "Xpand*.dll" # filter
    Push "$INSTDIR\Xpand.DLL" # folder to search in
    Call MakeFileList
    
    # install all eXpand Dll's to the GAC 
    ExecWait '"$INSTDIR\Tools\gacutil.exe" /il "$INSTDIR\XpandDllList.txt" /f' $0
    
    StrCmp $0 "1" 0 +2
    DetailPrint "install assamblies to the GAC failed"
    
SectionEnd

# Macro for selecting uninstaller sections
!macro SELECT_UNSECTION SECTION_NAME UNSECTION_ID
    Push $R0
    ReadRegStr $R0 HKLM "${REGKEY}\Components" "${SECTION_NAME}"
    StrCmp $R0 1 0 next${UNSECTION_ID}
    !insertmacro SelectSection "${UNSECTION_ID}"
    GoTo done${UNSECTION_ID}
next${UNSECTION_ID}:
    !insertmacro UnselectSection "${UNSECTION_ID}"
done${UNSECTION_ID}:
    Pop $R0
!macroend

# Uninstaller sections
Section /o -un.Main UNSEC0000
    CopyFiles /FILESONLY "$INSTDIR\Tools\gacutil.exe" $TEMP
    RmDir /r /REBOOTOK $INSTDIR
    DeleteRegValue HKLM "${REGKEY}\Components" Main
SectionEnd

Section -un.post UNSEC0001
    # remove To display an assembly in the Add Reference dialog box http://msdn.microsoft.com/en-us/library/wkze6zky.aspx
    DeleteRegKey HKLM "SOFTWARE\Microsoft\.NETFramework\v3.0\AssemblyFoldersEx\Xpand"

    # get all eXpand Dll's from the GAC and put into tempDllList.txt 
    ExecWait '"$TEMP\gacutil.exe" /l | find /i "Xpand." > "$TEMP\tempDllList.txt"'

    # install all eXpand Dll's to the GAC 
    ExecWait '"$TEMP\gacutil.exe" /ul "$TEMP\tempDllList.txt" /f' $0
    
    StrCmp $0 "1" 0 +2
    DetailPrint "uninstall assamblies from the GAC failed"
    
    Delete "$$TEMP\tempDllList.txt"
    Delete "$TEMP\gacutil.exe"
    
    DeleteRegKey HKLM "SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\$(^Name)"
    Delete /REBOOTOK "$SMPROGRAMS\$StartMenuGroup\$(^UninstallLink).lnk"
    Delete /REBOOTOK $INSTDIR\uninstall.exe
    DeleteRegValue HKLM "${REGKEY}" Path
    DeleteRegKey /IfEmpty HKLM "${REGKEY}\Components"
    DeleteRegKey /IfEmpty HKLM "${REGKEY}"
    RmDir /REBOOTOK $SMPROGRAMS\$StartMenuGroup
    RmDir /REBOOTOK $INSTDIR
SectionEnd

# Installer functions
Function .onInit
    InitPluginsDir
    StrCpy $StartMenuGroup eXpandFramework
FunctionEnd

# Uninstaller functions
Function un.onInit
    ReadRegStr $INSTDIR HKLM "${REGKEY}" Path
    StrCpy $StartMenuGroup eXpandFramework
    !insertmacro SELECT_UNSECTION Main ${UNSEC0000}
FunctionEnd

# Installer Language Strings
# TODO Update the Language Strings with the appropriate translations.

LangString ^UninstallLink ${LANG_ENGLISH} "Uninstall $(^Name)"

Function MakeFileList
    Exch $R0 #path
    Exch
    Exch $R1 #filter
    Exch
    Exch 2
    Exch $R2 #output file
    Exch 2
    Push $R3
    Push $R4
    Push $R5
     ClearErrors
     FindFirst $R3 $R4 "$R0\$R1"
      FileOpen $R5 $R2 w
     
     Loop:
     IfErrors Done
      FileWrite $R5 "$R0\$R4$\r$\n"
      FindNext $R3 $R4
      Goto Loop
     
     Done:
      FileClose $R5
     FindClose $R3
    Pop $R5
    Pop $R4
    Pop $R3
    Pop $R2
    Pop $R1
    Pop $R0
FunctionEnd